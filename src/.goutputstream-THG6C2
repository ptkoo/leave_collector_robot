# This Script is the main script of the robot

# Import all important libraries
import numpy as np
import cv2
import math
import time

# Import robot controller class
from controller.robot import Robot
from controller.ackerman import turning
from controller.kalman_filter import Kalman_Yaw

# Import sensor library
from sensors.ultrasonic_sensor import setPIN, distance

# Import funciton for interacting with AI server
# from api.Client import fetch_dir

# Setup. . . (IP, sensor pins, motor, etc..)

# I2C address was setted to 0x0b by defalut
# Servo Driver type was setted to 16 pins by default
# You can change it according to your setup
leaf_collector = Robot()
yaw = Kalman_Yaw()



setPIN(0, 5)
setPIN(14, 15)

# Maximum PWM value (refer to Arduino PWM)
leaf_collector.set_mxSpeed(255)
# Set the servo pin from the servo driver here
# fl, fr, bl, br
leaf_collector.set_servo_pins(0, 7, 3, 11)

# IP = 'localhost'
# Port = '1234'

# Test API
# res = fetch_dir(IP, Port, cv2.imread(r'./BuildModel/lil_left.png'))
# print(res)


one = True
action = [True, False, False, False, False]

kp = 0.02
ki = 0.01
kd = 0.015
const = [kp, ki, kd]


while distance(0, 5) > 5 or distance(14, 15) > 5:
	time.sleep(0.1)
	pass


start = time.time()

# Loop overtime
while True:
    
    if one:
        leaf_collector.set_servos_angle(leaf_collector.for_angle)
        time.sleep(0.5)
        one = False
    
    
    if action[0]:
		# Move down from the footpath
        try:
            leaf_collector.set_speeds(75,75)
            leaf_collector.forward(360-yaw.get_yaw(), 0, const)
        except:
            print("Kalman error")
            pass
        if time.time() - start > 5:
            action[0] = False
            action[1] = True
            start = time.time()
            
    elif action[1]:
		# Move to the middle of the grass plane
        try:
            leaf_collector.set_speeds(200, 200)
            leaf_collector.forward(360-yaw.get_yaw(), 0, const)
        except:
            print("Kalman error")
            pass
        if time.time() - start > 15:
            action[1] = False
            action[2] = True
            start = time.time()

    elif action[2]:
		## "Turn left" from the middle of the grass plane (should be passed the big tree)
        # Angle positions was setted from the forward offset
        l_angle, r_angle, l_ratio, r_ratio = turning(-15)
        leaf_collector.set_servos_angle([l_angle, r_angle, -1*l_angle, -1*r_angle])
        left_speed = 255*l_ratio if 255*l_ratio >= 100 else 100
        right_speed = 255*r_ratio if 255*r_ratio >= 100 else 100
        leaf_collector.set_speeds(left_speed, right_speed)
        try:
            curr = yaw.get_yaw()
            if (curr)%360 > 80 and (curr)%360 < 100:
            #if (360-curr)%360 > 170 and (360-curr)%360 < 190:
                leaf_collector.set_speeds(0, 0)
                leaf_collector.set_servos_angle(leaf_collector.for_angle)
                action[2] = False
                action[3] = True
                start = time.time()
                yaw.re_initialize()
                time.sleep(1)
        except:
            pass
     
    elif action[3]:
        # LONG striaght to the gournd (dirt)
        try:
            leaf_collector.set_speeds(200, 200)
            leaf_collector.forward(360-yaw.get_yaw(), 0, const)
        except:
            print("Kalman error")
            pass
        if time.time() - start > 40:
            action[3] = False
            action[4] = True
            start = time.time()
            
    elif action[4]:
		# End the action
        break
		
    time.sleep(0.2)

    # Please note that you have to loop overtime to make it reaches to the target
